@page "/Pokebox"

@using PluginWebServer.Data
@using Microsoft.EntityFrameworkCore
@using Syncfusion.Blazor.Inputs
@using Syncfusion.Blazor.Navigations
@using Syncfusion.Blazor.Data
@using global::Pokebox.Models;
@using global::Pokebox;

@inject IDbContextFactory<PokeboxContext> ContextFactory

<PageTitle>Pokebox</PageTitle>

<h2>Pokemon Storage</h2>

@if (pokebox == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <p>Latest Extract: <i>@LatestExtract</i></p>

    <SfGrid ID="Grid" @ref="DefaultGrid" DataSource="@pokebox" AllowSorting="true" AllowFiltering="true" AllowPaging="true" EnableStickyHeader="true" EnableAltRow="true" AllowExcelExport="true" Toolbar="@(new List<string>() { "ExcelExport" })">
        <GridEvents OnToolbarClick="ToolbarClickHandler" TValue="PokeboxEntry"></GridEvents>
        <GridPageSettings PageSizes=@PageSizes></GridPageSettings>
        <GridFilterSettings Type ="Syncfusion.Blazor.Grids.FilterType.Excel"></GridFilterSettings>
        <SfToolbar>
        <ToolbarItems>
            <ToolbarItem Type="ItemType.Input" Align="Syncfusion.Blazor.Navigations.ItemAlign.Right">
                <Template>
                    <SfTextBox Placeholder="Search..." Input="OnInput"></SfTextBox>
                    <span class="e-search-icon e-icons"></span>
                </Template>
            </ToolbarItem>
        </ToolbarItems>
    </SfToolbar>
        <GridColumns>
            <GridColumn HeaderText="" TextAlign="TextAlign.Center" Width="120" >
                <Template>
                    @{
                        var pokemon = (context as PokeboxEntry);
                        <div class="image">
                            <img src="@($"images/pokemon/{(int)pokemon.PokemonId}.png")" onerror="this.src='@($"images/icons/egg.png")'" alt="@pokemon.PokemonId" Toolbar="@(new List<string>() { "ExcelExport" })" />
                        </div>
                    }
                </Template>
            </GridColumn>
            <GridColumn Field=@nameof(PokeboxEntry.PokemonId) HeaderText="Pokemon" TextAlign="TextAlign.Left" Width="120"></GridColumn>
            <GridColumn Field=@nameof(PokeboxEntry.CP) HeaderText="CP" Width="150"></GridColumn>
            <GridColumn Field=@nameof(PokeboxEntry.Stamina) HeaderText="MaxStamina" TextAlign="TextAlign.Left" Width="130"></GridColumn>
            <GridColumn Field=@nameof(PokeboxEntry.Move1) HeaderText="Move 1" TextAlign="TextAlign.Left" Width="130"></GridColumn>
            <GridColumn Field=@nameof(PokeboxEntry.Move2) HeaderText="Move 2" TextAlign="TextAlign.Left" Width="130"></GridColumn>
            <GridColumn Field=@nameof(PokeboxEntry.Move3) HeaderText="Move 3" TextAlign="TextAlign.Left" Width="130"></GridColumn>
            <GridColumn Field=@nameof(PokeboxEntry.IndividualAttack) HeaderText="IV (Attack)" TextAlign="TextAlign.Left" Width="130"></GridColumn>
            <GridColumn Field=@nameof(PokeboxEntry.IndividualDefense) HeaderText="IV (Defense)" TextAlign="TextAlign.Left" Width="130"></GridColumn>
            <GridColumn Field=@nameof(PokeboxEntry.IndividualStamina) HeaderText="IV (Stamina)" TextAlign="TextAlign.Left" Width="130"></GridColumn>
            <GridColumn Field=@nameof(PokeboxEntry.Gender) HeaderText="Gender" TextAlign="TextAlign.Left" Width="130"></GridColumn>
            <GridColumn Field=@nameof(PokeboxEntry.IsShiny) HeaderText="Shiny" TextAlign="TextAlign.Left" Width="130"></GridColumn>
            <GridColumn Field=@nameof(PokeboxEntry.IsShadow) HeaderText="Shadow" TextAlign="TextAlign.Left" Width="130"></GridColumn>
            <GridColumn Field=@nameof(PokeboxEntry.IsLucky) HeaderText="Lucky" TextAlign="TextAlign.Right" Width="130"></GridColumn>
        </GridColumns>
        </SfGrid>

    <style>
        .image img {
            height: 55px;
            width: 55px;
            border-radius: 50px;
            box-shadow: inset 0 0 1px #e0e0e0, inset 0 0 14px rgba(0, 0, 0, 0.2);
        }
    </style>
}




@code {
    [Parameter]
    public string Name { get; set; }
    public DateTime LatestExtract { get; set; }

    public List<int> PageSizes = new List<int> { 5, 10, 15, 20 };

    private List<PokeboxEntry> pokebox;
    //private PokeboxService PokeboxService;

    private SfGrid<PokeboxEntry> DefaultGrid;

    public void OnInput(InputEventArgs args)
    {
        this.DefaultGrid.Search(args.Value);
    }

    public async Task ToolbarClickHandler(Syncfusion.Blazor.Navigations.ClickEventArgs args)
    {
        if (args.Item.Id == "Grid_excelexport") //Id is combination of Grid's ID and itemname
        {
            await this.DefaultGrid.ExcelExport();
        }
    }

    protected override async Task OnInitializedAsync()
    {
        using (var ctx = ContextFactory.CreateDbContext())
        {
            PokeboxEntry lastEntry = ctx.PokeboxEntries.OrderByDescending(x => x.timestamp).FirstOrDefault();
            LatestExtract = lastEntry.timestamp;
            pokebox = await ctx.PokeboxEntries.Where(x => x.ExtractId == lastEntry.ExtractId).OrderByDescending(x => x.CP).ToListAsync<PokeboxEntry>();
        }
        
    }
}